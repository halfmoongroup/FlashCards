package com.hmg.app.flash.model.auto;

import java.time.LocalDate;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.hmg.app.flash.api.util.DeckVisibility;
import com.hmg.app.flash.model.FCUser;
import com.hmg.app.flash.model.Question;

/**
 * Class _Deck was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Deck extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "id";

    public static final Property<LocalDate> COMPLETE_DATE = Property.create("completeDate", LocalDate.class);
    public static final Property<LocalDate> CREATE_DATE = Property.create("createDate", LocalDate.class);
    public static final Property<String> DECK_ID = Property.create("deckId", String.class);
    public static final Property<Integer> QUESTION_COUNT = Property.create("questionCount", Integer.class);
    public static final Property<DeckVisibility> VISIBILITY = Property.create("visibility", DeckVisibility.class);
    public static final Property<List<Question>> QUESTIONS = Property.create("questions", List.class);
    public static final Property<FCUser> USER = Property.create("user", FCUser.class);

    public void setCompleteDate(LocalDate completeDate) {
        writeProperty("completeDate", completeDate);
    }
    public LocalDate getCompleteDate() {
        return (LocalDate)readProperty("completeDate");
    }

    public void setCreateDate(LocalDate createDate) {
        writeProperty("createDate", createDate);
    }
    public LocalDate getCreateDate() {
        return (LocalDate)readProperty("createDate");
    }

    public void setDeckId(String deckId) {
        writeProperty("deckId", deckId);
    }
    public String getDeckId() {
        return (String)readProperty("deckId");
    }

    public void setQuestionCount(int questionCount) {
        writeProperty("questionCount", questionCount);
    }
    public int getQuestionCount() {
        Object value = readProperty("questionCount");
        return (value != null) ? (Integer) value : 0;
    }

    public void setVisibility(DeckVisibility visibility) {
        writeProperty("visibility", visibility);
    }
    public DeckVisibility getVisibility() {
        return (DeckVisibility)readProperty("visibility");
    }

    public void addToQuestions(Question obj) {
        addToManyTarget("questions", obj, true);
    }
    public void removeFromQuestions(Question obj) {
        removeToManyTarget("questions", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Question> getQuestions() {
        return (List<Question>)readProperty("questions");
    }


    public void setUser(FCUser user) {
        setToOneTarget("user", user, true);
    }

    public FCUser getUser() {
        return (FCUser)readProperty("user");
    }


}
